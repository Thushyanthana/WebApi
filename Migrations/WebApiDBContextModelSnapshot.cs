// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.DataBaseContext;

namespace WebApi.Migrations
{
    [DbContext(typeof(WebApiDBContext))]
    partial class WebApiDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Entity.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserCredentialModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserCredentialModelId");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("WebApi.Entity.Grade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GradeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("WebApi.Entity.Lecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserCredentialModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserCredentialModelId");

                    b.ToTable("Lectures");
                });

            modelBuilder.Entity("WebApi.Entity.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserCredentialModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GradeId");

                    b.HasIndex("UserCredentialModelId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebApi.Entity.UserCredentialModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UseruniqueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserCredentialModels");
                });

            modelBuilder.Entity("WebApi.Entity.Admin", b =>
                {
                    b.HasOne("WebApi.Entity.UserCredentialModel", "UserCredentialModel")
                        .WithMany()
                        .HasForeignKey("UserCredentialModelId");

                    b.Navigation("UserCredentialModel");
                });

            modelBuilder.Entity("WebApi.Entity.Lecture", b =>
                {
                    b.HasOne("WebApi.Entity.UserCredentialModel", "UserCredentialModel")
                        .WithMany()
                        .HasForeignKey("UserCredentialModelId");

                    b.Navigation("UserCredentialModel");
                });

            modelBuilder.Entity("WebApi.Entity.Student", b =>
                {
                    b.HasOne("WebApi.Entity.Grade", "Gradesingle")
                        .WithMany("Students")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Entity.UserCredentialModel", "UserCredentialModel")
                        .WithMany()
                        .HasForeignKey("UserCredentialModelId");

                    b.Navigation("Gradesingle");

                    b.Navigation("UserCredentialModel");
                });

            modelBuilder.Entity("WebApi.Entity.Grade", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
